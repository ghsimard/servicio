{"version":3,"sources":["../../src/dashboard/dashboard.controller.ts"],"sourcesContent":["import { Controller, Get, UseGuards, Req, Put, Body } from '@nestjs/common';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth.guard';\nimport { DashboardService } from './dashboard.service';\nimport { ApiTags, ApiOperation, ApiResponse, ApiBearerAuth } from '@nestjs/swagger';\n\ninterface RequestWithUser {\n  user: {\n    sub: string;\n    email: string;\n  };\n}\n\n@ApiTags('dashboard')\n@Controller('dashboard')\nexport class DashboardController {\n  constructor(private readonly dashboardService: DashboardService) {}\n\n  @ApiOperation({ summary: 'Get dashboard data for the current user' })\n  @ApiResponse({ \n    status: 200, \n    description: 'Dashboard data retrieved successfully' \n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  async getDashboard(@Req() req: RequestWithUser) {\n    return this.dashboardService.getDashboardData(req.user.sub);\n  }\n\n  @ApiOperation({ summary: 'Get user profile information' })\n  @ApiResponse({ \n    status: 200, \n    description: 'User profile data retrieved successfully',\n    schema: {\n      example: {\n        id: 'e7c8f8f0-d5b9-4dc7-a8b2-f9f0d5b9dc7a',\n        username: 'johndoe',\n        email: 'john@example.com',\n        preferredLanguage: 'en',\n      }\n    }\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  async getProfile(@Req() req: RequestWithUser) {\n    return this.dashboardService.getUserProfile(req.user.sub);\n  }\n\n  @ApiOperation({ summary: 'Update user profile information' })\n  @ApiResponse({ \n    status: 200, \n    description: 'User profile updated successfully',\n    schema: {\n      example: {\n        id: 'e7c8f8f0-d5b9-4dc7-a8b2-f9f0d5b9dc7a',\n        username: 'johndoe',\n        email: 'john@example.com',\n        name: 'John Doe',\n        preferredLanguage: 'en',\n      }\n    }\n  })\n  @ApiResponse({ status: 401, description: 'Unauthorized' })\n  @ApiBearerAuth()\n  @UseGuards(JwtAuthGuard)\n  @Put('profile')\n  async updateProfile(@Req() req: RequestWithUser, @Body() updateData: any) {\n    return this.dashboardService.updateUserProfile(req.user.sub, updateData);\n  }\n} "],"names":["DashboardController","getDashboard","req","dashboardService","getDashboardData","user","sub","getProfile","getUserProfile","updateProfile","updateData","updateUserProfile","constructor","summary","status","description","schema","example","id","username","email","preferredLanguage","name"],"mappings":";;;;+BAcaA;;;eAAAA;;;wBAd8C;8BAC9B;kCACI;yBACiC;;;;;;;;;;;;;;;AAW3D,IAAA,AAAMA,sBAAN,MAAMA;IAGX,MASMC,aAAa,AAAOC,GAAoB,EAAE;QAC9C,OAAO,IAAI,CAACC,gBAAgB,CAACC,gBAAgB,CAACF,IAAIG,IAAI,CAACC,GAAG;IAC5D;IAEA,MAiBMC,WAAW,AAAOL,GAAoB,EAAE;QAC5C,OAAO,IAAI,CAACC,gBAAgB,CAACK,cAAc,CAACN,IAAIG,IAAI,CAACC,GAAG;IAC1D;IAEA,MAkBMG,cAAc,AAAOP,GAAoB,EAAE,AAAQQ,UAAe,EAAE;QACxE,OAAO,IAAI,CAACP,gBAAgB,CAACQ,iBAAiB,CAACT,IAAIG,IAAI,CAACC,GAAG,EAAEI;IAC/D;IAxDAE,YAAY,AAAiBT,gBAAkC,CAAE;aAApCA,mBAAAA;IAAqC;AAyDpE;;;QAvDkBU,SAAS;;;QAEvBC,QAAQ;QACRC,aAAa;;;QAEAD,QAAQ;QAAKC,aAAa;;;;;;;;;;;;;;QAQzBF,SAAS;;;QAEvBC,QAAQ;QACRC,aAAa;QACbC,QAAQ;YACNC,SAAS;gBACPC,IAAI;gBACJC,UAAU;gBACVC,OAAO;gBACPC,mBAAmB;YACrB;QACF;;;QAEaP,QAAQ;QAAKC,aAAa;;;;;;;;;;;;;;QAQzBF,SAAS;;;QAEvBC,QAAQ;QACRC,aAAa;QACbC,QAAQ;YACNC,SAAS;gBACPC,IAAI;gBACJC,UAAU;gBACVC,OAAO;gBACPE,MAAM;gBACND,mBAAmB;YACrB;QACF;;;QAEaP,QAAQ;QAAKC,aAAa"}