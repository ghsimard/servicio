{"version":3,"sources":["../../src/auth/auth.module.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { PrismaService } from '../prisma/prisma.service';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JwtAuthGuard } from './guards/jwt-auth.guard';\n\n@Module({\n  imports: [\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        secret: configService.get<string>('JWT_SECRET'),\n        signOptions: {\n          expiresIn: configService.get<string>('JWT_EXPIRATION', '7d'),\n        },\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [\n    AuthService,\n    PrismaService,\n    JwtStrategy,\n    JwtAuthGuard,\n  ],\n  exports: [AuthService, JwtModule, JwtStrategy, JwtAuthGuard],\n})\nexport class AuthModule {} "],"names":["AuthModule","imports","JwtModule","registerAsync","ConfigModule","useFactory","configService","secret","get","signOptions","expiresIn","inject","ConfigService","controllers","AuthController","providers","AuthService","PrismaService","JwtStrategy","JwtAuthGuard","exports"],"mappings":";;;;+BA+BaA;;;eAAAA;;;wBA/BU;qBACG;wBACkB;gCACb;6BACH;+BACE;6BACF;8BACC;;;;;;;AAwBtB,IAAA,AAAMA,aAAN,MAAMA;AAAY;;;QArBvBC,SAAS;YACPC,cAAS,CAACC,aAAa,CAAC;gBACtBF,SAAS;oBAACG,oBAAY;iBAAC;gBACvBC,YAAY,CAACC,gBAAkC,CAAA;wBAC7CC,QAAQD,cAAcE,GAAG,CAAS;wBAClCC,aAAa;4BACXC,WAAWJ,cAAcE,GAAG,CAAS,kBAAkB;wBACzD;oBACF,CAAA;gBACAG,QAAQ;oBAACC,qBAAa;iBAAC;YACzB;SACD;QACDC,aAAa;YAACC,8BAAc;SAAC;QAC7BC,WAAW;YACTC,wBAAW;YACXC,4BAAa;YACbC,wBAAW;YACXC,0BAAY;SACb;QACDC,SAAS;YAACJ,wBAAW;YAAEd,cAAS;YAAEgB,wBAAW;YAAEC,0BAAY;SAAC"}