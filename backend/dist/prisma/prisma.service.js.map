{"version":3,"sources":["../../src/prisma/prisma.service.ts"],"sourcesContent":["import { Injectable, OnModuleInit, OnModuleDestroy, Logger } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService\n  extends PrismaClient\n  implements OnModuleInit, OnModuleDestroy\n{\n  private readonly logger = new Logger(PrismaService.name);\n\n  constructor() {\n    // Use selective logging to reduce noise in the logs\n    super({\n      log: ['error', 'warn'],\n    });\n  }\n\n  async onModuleInit() {\n    this.logger.log('Connecting to PostgreSQL database...');\n    try {\n      await this.$connect();\n      this.logger.log('Successfully connected to the database');\n    } catch (error) {\n      this.logger.error('Failed to connect to the database', error);\n      throw error;\n    }\n  }\n\n  async onModuleDestroy() {\n    this.logger.log('Disconnecting from PostgreSQL database...');\n    try {\n      await this.$disconnect();\n      this.logger.log('Successfully disconnected from the database');\n    } catch (error) {\n      this.logger.error('Error disconnecting from database', error);\n    }\n  }\n} "],"names":["PrismaService","PrismaClient","onModuleInit","logger","log","$connect","error","onModuleDestroy","$disconnect","constructor","Logger","name"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAJqD;wBACrC;;;;;;;;;;AAGtB,IAAA,AAAMA,gBAAN,MAAMA,sBACHC,oBAAY;IAYpB,MAAMC,eAAe;QACnB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC;QAChB,IAAI;YACF,MAAM,IAAI,CAACC,QAAQ;YACnB,IAAI,CAACF,MAAM,CAACC,GAAG,CAAC;QAClB,EAAE,OAAOE,OAAO;YACd,IAAI,CAACH,MAAM,CAACG,KAAK,CAAC,qCAAqCA;YACvD,MAAMA;QACR;IACF;IAEA,MAAMC,kBAAkB;QACtB,IAAI,CAACJ,MAAM,CAACC,GAAG,CAAC;QAChB,IAAI;YACF,MAAM,IAAI,CAACI,WAAW;YACtB,IAAI,CAACL,MAAM,CAACC,GAAG,CAAC;QAClB,EAAE,OAAOE,OAAO;YACd,IAAI,CAACH,MAAM,CAACG,KAAK,CAAC,qCAAqCA;QACzD;IACF;IA1BAG,aAAc;QACZ,oDAAoD;QACpD,KAAK,CAAC;YACJL,KAAK;gBAAC;gBAAS;aAAO;QACxB,SANeD,SAAS,IAAIO,cAAM,CAACV,cAAcW,IAAI;IAOvD;AAsBF"}