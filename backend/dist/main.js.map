{"version":3,"sources":["../src/main.ts"],"sourcesContent":["import { NestFactory } from '@nestjs/core';\nimport { AppModule } from './app.module';\nimport { ValidationPipe } from '@nestjs/common';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { ConfigService } from '@nestjs/config';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n  const configService = app.get(ConfigService);\n  const appConfig = configService.get('app');\n\n  // Default CORS configuration\n  const corsConfig = appConfig?.cors || {\n    origin: [\n      'http://localhost:3000',\n      'http://localhost:3001',\n      'http://localhost:3002',\n      'http://localhost:3003',\n    ],\n    methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    credentials: true,\n  };\n\n  // Default port - explicitly set to 3001\n  const port = 3001;\n  \n  // Enable CORS for the frontend\n  app.enableCors(corsConfig);\n\n  // Add /api prefix to all routes except health checks\n  app.setGlobalPrefix('api', {\n    exclude: ['/', 'health'],\n  });\n  \n  // Enable validation pipes\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n      transform: true,\n    }),\n  );\n  \n  // Swagger setup\n  const config = new DocumentBuilder()\n    .setTitle('Servicio API')\n    .setDescription('The Servicio API Documentation')\n    .setVersion('1.0')\n    .addBearerAuth()\n    .addServer(`http://localhost:${port}`, 'Local environment')\n    .build();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('api', app, document);\n\n  await app.listen(port);\n  console.log(`\nApplication is running on: http://localhost:${port}\nSwagger documentation: http://localhost:${port}/api\nHealth check: http://localhost:${port}/health\nAPI root: http://localhost:${port}/api\n  `);\n}\nbootstrap();\n"],"names":["bootstrap","app","NestFactory","create","AppModule","configService","get","ConfigService","appConfig","corsConfig","cors","origin","methods","allowedHeaders","credentials","port","enableCors","setGlobalPrefix","exclude","useGlobalPipes","ValidationPipe","whitelist","transform","config","DocumentBuilder","setTitle","setDescription","setVersion","addBearerAuth","addServer","build","document","SwaggerModule","createDocument","setup","listen","console","log"],"mappings":";;;;sBAA4B;2BACF;wBACK;yBACgB;wBACjB;AAE9B,eAAeA;IACb,MAAMC,MAAM,MAAMC,iBAAW,CAACC,MAAM,CAACC,oBAAS;IAC9C,MAAMC,gBAAgBJ,IAAIK,GAAG,CAACC,qBAAa;IAC3C,MAAMC,YAAYH,cAAcC,GAAG,CAAC;IAEpC,6BAA6B;IAC7B,MAAMG,aAAaD,WAAWE,QAAQ;QACpCC,QAAQ;YACN;YACA;YACA;YACA;SACD;QACDC,SAAS;YAAC;YAAO;YAAQ;YAAO;YAAU;YAAS;SAAU;QAC7DC,gBAAgB;YAAC;YAAgB;SAAgB;QACjDC,aAAa;IACf;IAEA,wCAAwC;IACxC,MAAMC,OAAO;IAEb,+BAA+B;IAC/Bd,IAAIe,UAAU,CAACP;IAEf,qDAAqD;IACrDR,IAAIgB,eAAe,CAAC,OAAO;QACzBC,SAAS;YAAC;YAAK;SAAS;IAC1B;IAEA,0BAA0B;IAC1BjB,IAAIkB,cAAc,CAChB,IAAIC,sBAAc,CAAC;QACjBC,WAAW;QACXC,WAAW;IACb;IAGF,gBAAgB;IAChB,MAAMC,SAAS,IAAIC,wBAAe,GAC/BC,QAAQ,CAAC,gBACTC,cAAc,CAAC,kCACfC,UAAU,CAAC,OACXC,aAAa,GACbC,SAAS,CAAC,CAAC,iBAAiB,EAAEd,MAAM,EAAE,qBACtCe,KAAK;IACR,MAAMC,WAAWC,sBAAa,CAACC,cAAc,CAAChC,KAAKsB;IACnDS,sBAAa,CAACE,KAAK,CAAC,OAAOjC,KAAK8B;IAEhC,MAAM9B,IAAIkC,MAAM,CAACpB;IACjBqB,QAAQC,GAAG,CAAC,CAAC;4CAC6B,EAAEtB,KAAK;wCACX,EAAEA,KAAK;+BAChB,EAAEA,KAAK;2BACX,EAAEA,KAAK;EAChC,CAAC;AACH;AACAf"}